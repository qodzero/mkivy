#!/usr/bin/python3

import os
import sys
import optparse

parser = optparse.OptionParser()
parser.add_option("-k", "--kivymd", action="store_true", dest="md", default=False, help="Create KivyMD Project")

(options, args) = parser.parse_args()
main = """
from os.path import dirname, join

from kivy.garden.iconfonts import register

from app import MainApp

MainApp().run()
"""

init = """
from kivy.app import App

from .view import MainWindow

class MainApp(App):
    def build(self):
        return MainWindow()
"""

md_init = """
from kivymd.app import MDApp

from .view import MainWindow

class MainApp(MDApp):
    def build(self):
        return MainWindow()
"""

view = """
from kivy.uix.boxlayout import BoxLayout

class MainWindow(BoxLayout):
    def __init__(self, **kw):
        super().__init__(**kw)
"""

kv = """
<MainWindow>:
    orientation: 'vertical'
    canvas.before:
        Color:
            rgba: rgba('#ffffff')
        Rectangle:
            pos: self.pos
            size: self.size
"""

if len(args) < 1:
    sys.exit('[!] Project path is required')
path = args[0]
print(f"[!] Setting up kivy project: {path}")

if not os.path.exists(path):
    os.mkdir(path)
else:
    sys.exit('[!] Project Path Already Exists')

os.mkdir(os.path.join(path, 'app'))

with open(os.path.join(path, 'main.py'), 'w') as f:
    f.write(main)

with open(os.path.join(path, 'app', '__init__.py'), 'w') as f:
    f.write(md_init) if options.md == True else f.write(init)

with open(os.path.join(path, 'app', 'view.py'), 'w') as f:
    f.write(view)

with open(os.path.join(path, 'app', 'main.kv'), 'w') as f:
    f.write(kv)

print('[!] Project Ready, Happy Coding :]')